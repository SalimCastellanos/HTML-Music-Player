$primary-color: #B3DAFF;
$primary-color-darker: #6BC5E1;
$secondary-color: #BE7306;
$tertiary-color: #1C6E1C;
$error-color: #a94442;

$text-color: #333;
$text-color-lighter: #777;
$text-size: 14px;
$text-size-bigger: 16px;
$text-size-biggest: 18px;

$unfocused-form-color: #aaa;

$total-app-border: 4px;
$subtle-radius: 4px;

$large-screen-width: 768px;
$small-screen-width: 568px;
$medium-small-screen-width: 400px;
$ultra-small-screen-width: 320px;

$large-screen-height: 768px;
$small-screen-height: 500px;
$medium-small-screen-height: 400px;
$ultra-small-screen-height: 320px;

$track-info-gutter: 6px;

$action-menu-active-color: #BE7306;
$action-menu-disabled-color: #5B616A;

$track-rating-width: 210px;
$track-rating-max-width: $track-rating-width / 5;
$track-rating-horizontal-gutter: 4px;
$track-rating-star-size: $track-rating-max-width - ($track-rating-horizontal-gutter * 2);
$track-rating-vertical-gutter: 6px;

$track-controls-gutter: 10px;
$track-controls-icon-size: 16px;
$track-controls-icon-text-gutter: 5px;

$track-right-controls-width: 44px;
$track-left-controls-width: 80px;
$track-control-menu-width: 36px;
$track-control-select-width: 44px;
$track-number-width: 42px;
$track-duration-width: 38px;
$track-width-used: $track-info-gutter + $track-left-controls-width + $track-number-width + $track-duration-width + $track-right-controls-width;

$track-item-height: 44px;

$non-desktop-picture-size: 96px;
$desktop-picture-size: 96px;
$visualizer-height: 104px;
$track-progress-height: 30px;
$player-panel-lower-container-height: $non-desktop-picture-size - $track-progress-height - 1px;

$border-width: 1px;
$snackbar-container-min-width: 288px;
$snackbar-action-width: 140px;
$snackbar-gutter: 24px;

$module-gutter-height: 15px;

$touch-hover-color: #ececec;

$slider-input-area-size: 36px;
$slider-background-size: 2px;
$slider-knob-size: 14px;
$label-width: 72px;
$line-height: $slider-input-area-size;
$popup-gutter: 20px;


$large-material-icon-height: 22px;
$large-material-icon-width: 18px;

$track-time-container-height: 20px;
$picture-width: 90px;
$picture-height: $picture-width;
$player-controls-vertical-space: $picture-height + $track-time-container-height;

$toolbar-height: 45px;
$toolbar-bottom-margin: 10px;
$toolbar-vertical-space: $toolbar-height + $toolbar-bottom-margin;

$snackbar-vertical-space: 48px;


@mixin css-filter($filter...) {
  filter: $filter;
}

/* <= 359 */
@mixin ultra-small-screen {
    @media (max-width: #{$medium-small-screen-width - 1px}) {
        @content;
    }
}

/* >= 360 && <= 567 */
@mixin medium-small-screen {
    @media (min-width: #{$medium-small-screen-width}) and (max-width: #{$small-screen-width - 1px}) {
        @content;
    }
}

/* >= 568 && <= 767 */
@mixin small-screen {
    @media (min-width: #{$small-screen-width}) and (max-width: #{$large-screen-width - 1px}) {
        @content;
    }
}

/* >= 768 */
@mixin large-screen {
    @media (min-width: #{$large-screen-width}) {
        @content;
    }
}


/* <= 359 */
@mixin ultra-short-screen {
    @media (max-height: #{$medium-small-screen-height - 1px}) {
        @content;
    }
}

/* >= 360 && <= 567 */
@mixin medium-short-screen {
    @media (min-height: #{$medium-small-screen-height}) and (max-height: #{$small-screen-height - 1px}) {
        @content;
    }
}

/* >= 568 && <= 767 */
@mixin short-screen {
    @media (min-height: #{$small-screen-height}) and (max-height: #{$large-screen-height - 1px}) {
        @content;
    }
}

/* >= 768 */
@mixin long-screen {
    @media (min-height: #{$large-screen-height}) {
        @content;
    }
}

@mixin desktop {
    @media (min-height: #{$large-screen-height}) and (min-width: #{$large-screen-width}) {
        @content;
    }
}

@mixin non-desktop {
    @media (max-height: #{$large-screen-height - 1px}), (max-width: #{$large-screen-width - 1px}) {
        @content;
    }
}

@mixin keyframes($animationName) {
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }

  // Output standard non-prefixed declaration
  #{$property}: $value;
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

//== Colors
//
//## Gray and brand colors for use across Bootstrap.

$gray-base:              #000 !default;
$gray-darker:            lighten($gray-base, 13.5%) !default; // #222
$gray-dark:              lighten($gray-base, 20%) !default;   // #333
$gray:                   lighten($gray-base, 33.5%) !default; // #555
$gray-light:             lighten($gray-base, 46.7%) !default; // #777
$gray-lighter:           lighten($gray-base, 93.5%) !default; // #eee

$brand-primary:         darken(#428bca, 6.5%) !default; // #337ab7
$brand-success:         #5cb85c !default;
$brand-info:            #5bc0de !default;
$brand-warning:         #f0ad4e !default;
$brand-danger:          #d9534f !default;


//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  $ultra-small-screen-width !default;
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs !default;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  $medium-small-screen-width !default;
$screen-sm-min:              $screen-sm !default;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  $small-screen-width !default;
$screen-md-min:              $screen-md !default;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  $large-screen-width !default;
$screen-lg-min:              $screen-lg !default;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;

//== Grid system
//
//## Define your custom responsive grid.

//** Number of columns in the grid.
$grid-columns:              12 !default;
//** Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width:         0px !default;
// Navbar collapse
//** Point at which the navbar becomes uncollapsed.
$grid-float-breakpoint:     $screen-sm-min !default;
//** Point at which the navbar begins collapsing.
$grid-float-breakpoint-max: ($grid-float-breakpoint - 1) !default;

$font-size-base:          15px !default;
$font-size-large:         ceil(($font-size-base * 1.25)) !default; // ~18px
$font-size-small:         ceil(($font-size-base * 0.85)) !default; // ~12px
//** Unit-less `line-height` for use in components like buttons.
$line-height-base:        1.33333 !default; // 20/15
//** Computed "line-height" (`font-size` * `line-height`) for use with `margin`, `padding`, etc.
$line-height-computed:    floor(($font-size-base * $line-height-base)) !default; // ~20px

//== Components
//
//## Define common padding and border radius sizes and more. Values based on 14px text and 1.428 line-height (~20px to start).

$padding-base-vertical:     6px !default;
$padding-base-horizontal:   12px !default;

$padding-large-vertical:    10px !default;
$padding-large-horizontal:  16px !default;

$padding-small-vertical:    5px !default;
$padding-small-horizontal:  10px !default;

$padding-xs-vertical:       1px !default;
$padding-xs-horizontal:     5px !default;

$line-height-large:         1.3333333 !default; // extra decimals for Win 8.1 Chrome
$line-height-small:         1.5 !default;

$border-radius-base:        4px !default;
$border-radius-large:       6px !default;
$border-radius-small:       3px !default;

//** Global color for active items (e.g., navs or dropdowns).
$component-active-color:    #fff !default;

//** Width of the `border` for generating carets that indicator dropdowns.
$caret-width-base:          4px !default;
//** Carets increase slightly in size for larger components.
$caret-width-large:         5px !default;

//== Forms
//
//##

//** `<input>` background color
$input-bg:                       #fff !default;
//** `<input disabled>` background color
$input-bg-disabled:              $gray-lighter !default;

//** Text color for `<input>`s
$input-color:                    $gray !default;
//** `<input>` border color
$input-border:                   #ccc !default;

// TODO: Rename `$input-border-radius` to `$input-border-radius-base` in v4
//** Default `.form-control` border radius
// This has no effect on `<select>`s in some browsers, due to the limited stylability of `<select>`s in CSS.
$input-border-radius:            $border-radius-base !default;
//** Large `.form-control` border radius
$input-border-radius-large:      $border-radius-large !default;
//** Small `.form-control` border radius
$input-border-radius-small:      $border-radius-small !default;

//** Border color for inputs on focus
$input-border-focus:             #BE7306 !default;

//** Placeholder text color
$input-color-placeholder:        #999 !default;

//** Default `.form-control` height
$input-height-base:              ($line-height-computed + ($padding-base-vertical * 2) + 2) !default;
//** Large `.form-control` height
$input-height-large:             (ceil($font-size-large * $line-height-large) + ($padding-large-vertical * 2) + 2) !default;
//** Small `.form-control` height
$input-height-small:             (floor($font-size-small * $line-height-small) + ($padding-small-vertical * 2) + 2) !default;

//** `.form-group` margin
$form-group-margin-bottom:       15px !default;

$legend-color:                   $gray-dark !default;
$legend-border-color:            #e5e5e5 !default;

//** Background color for textual input addons
$input-group-addon-bg:           #f9f9f9 !default;
//** Border color for textual input addons
$input-group-addon-border-color: $input-border !default;

//** Disabled cursor for form controls and buttons.
$cursor-disabled:                not-allowed !default;


$state-success-text:             #3c763d !default;
$state-success-bg:               #dff0d8 !default;
$state-success-border:           darken(adjust-hue($state-success-bg, -10), 5%) !default;

$state-info-text:                #31708f !default;
$state-info-bg:                  #d9edf7 !default;
$state-info-border:              darken(adjust-hue($state-info-bg, -10), 7%) !default;

$state-warning-text:             #8a6d3b !default;
$state-warning-bg:               #fcf8e3 !default;
$state-warning-border:           darken(adjust-hue($state-warning-bg, -10), 5%) !default;

$state-danger-text:              #a94442 !default;
$state-danger-bg:                #f2dede !default;
$state-danger-border:            darken(adjust-hue($state-danger-bg, -10), 5%) !default;

//== Scaffolding
//
//## Settings for some of the most global styles.

//** Background color for `<body>`.
$body-bg:               #fff !default;
//** Global text color on `<body>`.
$text-color:            $gray-dark !default;

//** Global textual link color.
$link-color:            $brand-primary !default;
//** Link hover color set via `darken()` function.
$link-hover-color:      darken($link-color, 15%) !default;
//** Link hover decoration.
$link-hover-decoration: underline !default;

// Vendor Prefixes
//
// All vendor mixins are deprecated as of v3.2.0 due to the introduction of
// Autoprefixer in our Gruntfile. They have been removed in v4.

// - Animations
// - Backface visibility
// - Box shadow
// - Box sizing
// - Content columns
// - Hyphens
// - Placeholder text
// - Transformations
// - Transitions
// - User Select


// Animations
@mixin animation($animation) {
          animation: $animation;
}
@mixin animation-name($name) {
          animation-name: $name;
}
@mixin animation-duration($duration) {
          animation-duration: $duration;
}
@mixin animation-timing-function($timing-function) {
          animation-timing-function: $timing-function;
}
@mixin animation-delay($delay) {
          animation-delay: $delay;
}
@mixin animation-iteration-count($iteration-count) {
          animation-iteration-count: $iteration-count;
}
@mixin animation-direction($direction) {
          animation-direction: $direction;
}
@mixin animation-fill-mode($fill-mode) {
          animation-fill-mode: $fill-mode;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`

@mixin backface-visibility($visibility) {
  backface-visibility: $visibility;
}

// Drop shadows
//
// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's
// supported browsers that have box shadow capabilities now support it.

@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
}


// Transformations
@mixin scale($ratio...) {
          transform: scale($ratio);
}

@mixin scale-gpu($ratio...) {
          transform: translateZ(0) scale($ratio);
}

@mixin scaleX($ratio) {
          transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
          transform: scaleY($ratio);
}
@mixin translateX($ratio) {
          transform: translateX($ratio);
}
@mixin translateY($ratio) {
          transform: translateY($ratio);
}
@mixin skew($x, $y) {
          transform: skewX($x) skewY($y);
}
@mixin skew1($x) {
          transform: skewX($x);
}
@mixin translate($x, $y) {
  transform: translate($x, $y);
}

@mixin translate3d($x, $y, $z) {
  transform: translate3d($x, $y, $z);
}
@mixin rotate($degrees) {
  transform: rotate($degrees);
}
@mixin rotateX($degrees) {
  transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  transform-origin: $origin;
}


@mixin transition($transition...) {
  transition: $transition;
}
@mixin transition-property($transition-property...) {
  transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  transition: transform $transition;
}

@mixin transition-filter($transition...) {
  transition: filter $transition;
}

@mixin transition-transform-filter($transition...) {
  transition: transform, filter $transition;
}

@mixin transition-transform-filter-separate($transformt, $filtert) {
  transition: transform $transformt, filter $filtert;
}

// User select
// For selecting text on the page

@mixin user-select($select) {
  user-select: $select;
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin calc($property, $expression) {
  #{$property}: calc(#{$expression});
}
